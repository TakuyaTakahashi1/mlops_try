
name: CI

on:
  # A11 から叩くため（手動/スケジューラ起動経由）
  workflow_dispatch: {}
  # PR（= chore/daily-scrape -> main）でも自動で動かす
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  lint:
    name: lint (ruff)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - run: pip install -r requirements.txt
      - run: ruff --version && ruff .

  typecheck:
    name: typecheck (mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - run: pip install -r requirements.txt
      - run: mypy .

  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11','3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - run: pip install -r requirements.txt
      - run: pytest -q

  notify:
    name: Comment to PR that CI finished
    needs: [lint, typecheck, test]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Post comment to the A11 PR
        uses: actions/github-script@v7
        env:
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          script: |
            const {owner, repo} = context.repo;

            // 1) PR イベントなら payload から番号が取れる
            let number = context.payload?.pull_request?.number || null;
            let branch = context.payload?.pull_request?.head?.ref || process.env.GITHUB_REF_NAME;

            // 2) workflow_dispatch の場合は chore/daily-scrape の PR を探す
            if (!number) {
              const head = `${owner}:${branch}`;
              const { data: prs } = await github.rest.pulls.list({ owner, repo, state: 'open', head });
              if (!prs.length) {
                core.info(`No open PR for ${head}. Skip comment.`);
                return;
              }
              number = prs[0].number;
            }

            const body = `✅ CI passed for \`${branch}\`.\n\n[View run](${process.env.RUN_URL})`;
            await github.rest.issues.createComment({ owner, repo, issue_number: number, body });
