name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  lint:
    name: lint (ruff)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - run: pip install -r requirements.txt
      - run: ruff check .

  typecheck:
    name: typecheck (mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - run: pip install -r requirements.txt
      - run: mypy .

  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - run: pip install -r requirements.txt
      - name: Run tests (parallel) with coverage
        run: |
          pytest -q -n auto \
            --cov=. \
            --cov-report=xml:coverage.xml \
            --cov-report=term:missing:skip-covered \
            --cov-fail-under=80

  # ✅ 追加: 全ジョブ成功時に A11 固定PRへコメント
  notify:
    name: notify PR on success
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    if: ${{ success() }}
    steps:
      - name: Comment to PR (A11)
        uses: actions/github-script@v7
        env:
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          script: |
            const {owner, repo} = context.repo;

            // pull_request 由来ならそのPRへ
            let number = context.payload?.pull_request?.number;
            let branch = context.payload?.pull_request?.head?.ref;

            // 手動/スケジュール等は chore/daily-scrape の固定PRを探す
            if (!number) {
              const head = `${owner}:chore/daily-scrape`;
              const { data: prs } = await github.rest.pulls.list({ owner, repo, state: 'open', head });
              if (!prs.length) {
                core.info('No open PR for chore/daily-scrape. Skip notification.');
                return;
              }
              number = prs[0].number;
              branch = prs[0].head.ref;
            }

            const body = `✅ CI passed for \`${branch}\`.\n\n[View run](${process.env.RUN_URL})`;
            await github.rest.issues.createComment({ owner, repo, issue_number: number, body });
